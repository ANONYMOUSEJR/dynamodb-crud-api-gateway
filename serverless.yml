service: dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.postsTableName}

custom:
  postsTableName: posts-tablee-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getPost:
    handler: api.getPost
    name: get-postt
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt PostsTable.Arn
  createPost:
    handler: api.createPost
    name: create-postt
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt PostsTable.Arn
  updatePost:
    handler: api.updatePost
    name: update-postt
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt PostsTable.Arn
  deletePost:
    handler: api.deletePost
    name: del-postt
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt PostsTable.Arn
  getAllPosts:
    handler: api.getAllPosts
    name: get-all-postss
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: posts
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt PostsTable.Arn
  functions:
  getProductById:
    handler: api.getProductById
    events:
      - http:
          path: posts/{PostId}
          method: GET
          request:
            parameters:
              querystrings:
                currency: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt PostsTable.Arn
